-- Create Authors Table
CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

-- Create Books Table
CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    genre VARCHAR(100),
    publication_year INT,
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

-- Create Borrowers Table
CREATE TABLE Borrowers (
    borrower_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255)
);

-- Create Loans Table
CREATE TABLE Loans (
    loan_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    borrower_id INT,
    loan_date DATE,
    return_date DATE,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (borrower_id) REFERENCES Borrowers(borrower_id)
);

-- Insert Authors
INSERT INTO Authors (name, birth_year) 
VALUES 
    ('J.K. Rowling', 1965),
    ('George Orwell', 1903),
    ('Harper Lee', 1926);

-- Insert Books
INSERT INTO Books (title, genre, publication_year, author_id)
VALUES 
    ('Harry Potter and the Sorcerer\'s Stone', 'Fantasy', 1997, 1),
    ('1984', 'Dystopian', 1949, 2),
    ('To Kill a Mockingbird', 'Fiction', 1960, 3);

-- Insert Borrowers
INSERT INTO Borrowers (name, email) 
VALUES 
    ('Alice Smith', 'alice@example.com'),
    ('Bob Johnson', 'bob@example.com');

-- Insert Loans
INSERT INTO Loans (book_id, borrower_id, loan_date, return_date) 
VALUES 
    (1, 1, '2025-03-01', '2025-03-15'),
    (2, 2, '2025-03-05', '2025-03-20');

SELECT Books.title, Authors.name AS author, Books.publication_year
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title, Authors.name AS author, Books.publication_year
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title, Borrowers.name AS borrower, Loans.loan_date, Loans.return_date
FROM Loans
JOIN Books ON Loans.book_id = Books.book_id
JOIN Borrowers ON Loans.borrower_id = Borrowers.borrower_id
WHERE Loans.return_date IS NULL OR Loans.return_date > CURDATE();

SELECT Books.title, Loans.loan_date, Loans.return_date
FROM Loans
JOIN Books ON Loans.book_id = Books.book_id
JOIN Borrowers ON Loans.borrower_id = Borrowers.borrower_id
WHERE Borrowers.name = 'Alice Smith';





